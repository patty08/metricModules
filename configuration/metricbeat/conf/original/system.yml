#------------------------------- System Module -------------------------------
- module: system
  metricsets:
    # CPU stats
    - cpu

    # System Load stats
    - load

    # Per CPU core stats
    #- core

    # IO stats
    - diskio

    # Per filesystem stats
     #- filesystem

    # File system summary stats
    #- fsstat

    # Memory stats
    - memory

    # Network stats
     #- network

    # Per process stats
    #- process

    # Sockets and connection info (linux only)
    #- socket

  enabled: true
  period: 10s
  # processes: ['.*']

  # if true, exports the CPU usage in ticks, together with the percentage values
  cpu_ticks: false

  # Enable collection of cgroup metrics from processes on Linux.
  #process.cgroups.enabled: true

  # A list of regular expressions used to whitelist environment variables
  # reported with the process metricset's events. Defaults to empty.
  #process.env.whitelist: []

  # Configure reverse DNS lookup on remote IP addresses in the socket metricset.
  #socket.reverse_lookup.enabled: false
  #socket.reverse_lookup.success_ttl: 60s
  #socket.reverse_lookup.failure_ttl: 60s


#================================ Processors ===================================

# Processors are used to reduce the number of fields in the exported event or to
# enhance the event with external metadata. This section defines a list of
# processors that are applied one by one and the first one receives the initial
# event:
#
#   event -> filter1 -> event1 -> filter2 ->event2 ...
#
# The supported processors are drop_fields, drop_event, include_fields, and
# add_cloud_metadata.
#
# For example, you can use the following processors to keep the fields that
# contain CPU load percentages, but remove the fields that contain CPU ticks
# values:


# CPU
#processors:
#- drop_fields:
#   fields: ["system.cpu.nice.pct","system.cpu.idle.pct","system.cpu.irq.pct","system.cpu.softirq.pct","system.cpu.steal.pct","system.cpu.user.ticks","system.cpu.system.ticks","system.cpu.nice.ticks","system.cpu.idle.ticks","system.cpu.iowait.ticks","system.cpu.irq.ticks","system.cpu.softirq.ticks","system.cpu.steal.ticks"]

# Diskio
# processors:
#- drop_fields:
#   fields: ["system.diskio.serial_number","system.diskio.read.count","system.diskio.write.count","system.diskio.read.bytes","system.diskio.write.bytes"]
   
# Filesystem
# processors:
#- drop_fields:
#   fields: ["system.filesystem.files","system.filesystem.free_files","system.filesystem.total","system.filesystem.used.bytes"]
   
# Load
# processors:
#- drop_fields:
#   fields: ["system.load.norm.1","system.load.norm.5","system.load.norm.15"]
   
# Memory
# processors:
#- drop_fields:
#   fields: ["system.memory.total","system.memory.used.bytes","system.memory.free","system.memory.used.pct","system.memory.swap.total","system.memory.swap.used.bytes","system.memory.swap.free","system.memory.swap.used.pct",system.memory.actual.used.bytes","system.memory.actual.free","system.memory.actual.used.pct"]
   
# Network
# processors:
#- drop_fields:
#   fields: ["system.network.out.packets","system.network.in.packets","system.network.in.dropped","system.network.out.dropped"]


#The following example drops the events that have the HTTP response code 200:

#processors:
# - drop_event:
#     when:
#        equals:
#           http.code: 200

# The following example enriches each event with metadata from the cloud
# provider about the host machine. It works on EC2, GCE, and DigitalOcean.
#
#processors:
#- add_cloud_metadata:
#
